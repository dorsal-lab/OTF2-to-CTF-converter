/* CTF 1.8 */

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015-2020 Philippe Proulx <pproulx@efficios.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 *
 * The following code was generated by barectf v3.0.1
 * on 2021-07-08T11:37:19.498641.
 *
 * For more details, see <https://barectf.org/>.
 */

trace {
	major = 1;
	minor = 8;
	byte_order = le;
	packet.header := struct {
		integer {
			signed = false;
			size = 32;
			align = 8;
			byte_order = native;
			base = 10;
		} magic;
		integer {
			signed = false;
			size = 64;
			align = 8;
			byte_order = native;
			base = 10;
		} stream_id;
	} align(8);
};

env {
	domain = "bare";
	tracer_name = "barectf";
	tracer_major = 3;
	tracer_minor = 0;
	tracer_patch = 1;
	tracer_pre = "";
	barectf_gen_date = "2021-07-08T11:37:19.498641";
};

clock {
	name = default;
	freq = 1000000000;
	precision = 0;
	offset_s = 0;
	offset = 0;
	absolute = false;
};

/* Data stream type `default` */
stream {
	id = 0;
	packet.context := struct {
		integer {
			signed = false;
			size = 64;
			align = 8;
			byte_order = native;
			base = 10;
		} packet_size;
		integer {
			signed = false;
			size = 64;
			align = 8;
			byte_order = native;
			base = 10;
		} content_size;
		integer {
			signed = false;
			size = 64;
			align = 8;
			byte_order = native;
			base = 10;
			map = clock.default.value;
		} timestamp_begin;
		integer {
			signed = false;
			size = 64;
			align = 8;
			byte_order = native;
			base = 10;
			map = clock.default.value;
		} timestamp_end;
		integer {
			signed = false;
			size = 64;
			align = 8;
			byte_order = native;
			base = 10;
		} events_discarded;
	} align(8);
	event.header := struct {
		integer {
			signed = false;
			size = 64;
			align = 8;
			byte_order = native;
			base = 10;
		} id;
		integer {
			signed = false;
			size = 64;
			align = 8;
			byte_order = native;
			base = 10;
			map = clock.default.value;
		} timestamp;
	} align(8);
};

event {
	stream_id = 0;
	id = 0;
	name = "Event_Enter";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} region;
	} align(1);
};

event {
	stream_id = 0;
	id = 1;
	name = "Event_Leave";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} region;
	} align(1);
};

event {
	stream_id = 0;
	id = 2;
	name = "Event_MpiCollectiveBegin";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
	} align(1);
};

event {
	stream_id = 0;
	id = 3;
	name = "Event_MpiCollectiveEnd";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} collectiveOp;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} communicator;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} root;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} sizeSent;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} sizeReceived;
	} align(1);
};

event {
	stream_id = 0;
	id = 4;
	name = "Event_MpiIrecv";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} receiver;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} communicator;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} msgTag;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} msgLength;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} requestID;
	} align(1);
};

event {
	stream_id = 0;
	id = 5;
	name = "Event_MpiIrecvRequest";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} requestID;
	} align(1);
};

event {
	stream_id = 0;
	id = 6;
	name = "Event_MpiIsend";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} receiver;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} communicator;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} msgTag;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} msgLength;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} requestID;
	} align(1);
};

event {
	stream_id = 0;
	id = 7;
	name = "Event_MpiIsendComplete";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} requestID;
	} align(1);
};

event {
	stream_id = 0;
	id = 8;
	name = "Event_MpiRecv";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} sender;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} communicator;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} msgTag;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} msgLength;
	} align(1);
};

event {
	stream_id = 0;
	id = 9;
	name = "Event_MpiRequestCancelled";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} requestID;
	} align(1);
};

event {
	stream_id = 0;
	id = 10;
	name = "Event_MpiRequestTest";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} requestID;
	} align(1);
};

event {
	stream_id = 0;
	id = 11;
	name = "Event_MpiSend";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} receiver;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} communicator;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} msgTag;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} msgLength;
	} align(1);
};

event {
	stream_id = 0;
	id = 12;
	name = "GlobalDefAttribute_Attribute";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 13;
	name = "GlobalDefAttribute_CallingContext";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 14;
	name = "GlobalDefAttribute_Comm";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 15;
	name = "GlobalDefAttribute_Double";
	fields := struct {
		floating_point {
			mant_dig = 53;
			exp_dig = 11;
			align = 64;
			byte_order = native;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 16;
	name = "GlobalDefAttribute_Float";
	fields := struct {
		floating_point {
			mant_dig = 24;
			exp_dig = 8;
			align = 32;
			byte_order = native;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 17;
	name = "GlobalDefAttribute_Group";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 18;
	name = "GlobalDefAttribute_Int16";
	fields := struct {
		integer {
			signed = true;
			size = 16;
			align = 16;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 19;
	name = "GlobalDefAttribute_Int32";
	fields := struct {
		integer {
			signed = true;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 20;
	name = "GlobalDefAttribute_Int64";
	fields := struct {
		integer {
			signed = true;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 21;
	name = "GlobalDefAttribute_Int8";
	fields := struct {
		integer {
			signed = true;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 22;
	name = "GlobalDefAttribute_InterruptGenerator";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 23;
	name = "GlobalDefAttribute_IoFile";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 24;
	name = "GlobalDefAttribute_IoHandle";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 25;
	name = "GlobalDefAttribute_Location";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 26;
	name = "GlobalDefAttribute_Metric";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 27;
	name = "GlobalDefAttribute_Parameter";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 28;
	name = "GlobalDefAttribute_Region";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 29;
	name = "GlobalDefAttribute_RmaWin";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 30;
	name = "GlobalDefAttribute_SourceCodeLocation";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 31;
	name = "GlobalDefAttribute_String";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 32;
	name = "GlobalDefAttribute_UInt16";
	fields := struct {
		integer {
			signed = false;
			size = 16;
			align = 16;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 33;
	name = "GlobalDefAttribute_UInt32";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 34;
	name = "GlobalDefAttribute_UInt64";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 35;
	name = "GlobalDefAttribute_UInt8";
	fields := struct {
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 36;
	name = "GlobalDef_Attribute";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} description;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} type;
	} align(1);
};

event {
	stream_id = 0;
	id = 37;
	name = "GlobalDef_CallingContext";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} region;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} sourceCodeLocation;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} parent;
	} align(1);
};

event {
	stream_id = 0;
	id = 38;
	name = "GlobalDef_CallingContextProperty";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} callingContext;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
	} align(1);
};

event {
	stream_id = 0;
	id = 39;
	name = "GlobalDef_Callpath";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} parent;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} region;
	} align(1);
};

event {
	stream_id = 0;
	id = 40;
	name = "GlobalDef_CallpathParameter";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} callpath;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} parameter;
	} align(1);
};

event {
	stream_id = 0;
	id = 41;
	name = "GlobalDef_Callsite";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} sourceFile;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} lineNumber;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} enteredRegion;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} leftRegion;
	} align(1);
};

event {
	stream_id = 0;
	id = 42;
	name = "GlobalDef_CartCoordinate";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} cartTopology;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} rank;
		integer {
			signed = false;
			size = 32;
			align = 8;
			byte_order = native;
			base = 10;
		} __coordinates_len;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} coordinates[__coordinates_len];
	} align(1);
};

event {
	stream_id = 0;
	id = 43;
	name = "GlobalDef_CartDimension";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} size;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} cartPeriodicity;
	} align(1);
};

event {
	stream_id = 0;
	id = 44;
	name = "GlobalDef_CartTopology";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} communicator;
		integer {
			signed = false;
			size = 32;
			align = 8;
			byte_order = native;
			base = 10;
		} __cartDimensions_len;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} cartDimensions[__cartDimensions_len];
	} align(1);
};

event {
	stream_id = 0;
	id = 45;
	name = "GlobalDef_ClockProperties";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} timerResolution;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} globalOffset;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} traceLength;
	} align(1);
};

event {
	stream_id = 0;
	id = 46;
	name = "GlobalDef_Comm";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} group;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} parent;
	} align(1);
};

event {
	stream_id = 0;
	id = 47;
	name = "GlobalDef_Group";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} groupType;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} paradigm;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} groupFlags;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} numberOfMembers;
	} align(1);
};

event {
	stream_id = 0;
	id = 48;
	name = "GlobalDef_GroupMember";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} group;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} rank;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} location;
	} align(1);
};

event {
	stream_id = 0;
	id = 49;
	name = "GlobalDef_InterruptGenerator";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} interruptGeneratorMode;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} base;
		integer {
			signed = true;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} exponent;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} period;
	} align(1);
};

event {
	stream_id = 0;
	id = 50;
	name = "GlobalDef_IoDirectory";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} scope;
	} align(1);
};

event {
	stream_id = 0;
	id = 51;
	name = "GlobalDef_IoFileProperty";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} ioFile;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
	} align(1);
};

event {
	stream_id = 0;
	id = 52;
	name = "GlobalDef_IoHandle";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} file;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} ioParadigm;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} ioHandleFlags;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} comm;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} parent;
	} align(1);
};

event {
	stream_id = 0;
	id = 53;
	name = "GlobalDef_IoParadigm";
	fields := struct {
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} identification;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} ioParadigmClass;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} ioParadigmFlags;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} numberOfProperties;
	} align(1);
};

event {
	stream_id = 0;
	id = 54;
	name = "GlobalDef_IoParadigmProperty";
	fields := struct {
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} ioParadigm;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} ioParadigmProperty;
	} align(1);
};

event {
	stream_id = 0;
	id = 55;
	name = "GlobalDef_IoPreCreatedHandleState";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} ioHandle;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} mode;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} statusFlags;
	} align(1);
};

event {
	stream_id = 0;
	id = 56;
	name = "GlobalDef_IoRegularFile";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} scope;
	} align(1);
};

event {
	stream_id = 0;
	id = 57;
	name = "GlobalDef_Location";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} locationType;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} numberOfEvents;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} locationGroup;
	} align(1);
};

event {
	stream_id = 0;
	id = 58;
	name = "GlobalDef_LocationGroup";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} locationGroupType;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} systemTreeParent;
	} align(1);
};

event {
	stream_id = 0;
	id = 59;
	name = "GlobalDef_LocationGroupProperty";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} locationGroup;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
	} align(1);
};

event {
	stream_id = 0;
	id = 60;
	name = "GlobalDef_LocationProperty";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} location;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
	} align(1);
};

event {
	stream_id = 0;
	id = 61;
	name = "GlobalDef_MetricClass";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 8;
			byte_order = native;
			base = 10;
		} __metricMembers_len;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} metricMembers[__metricMembers_len];
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} metricOccurrence;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} recorderKind;
	} align(1);
};

event {
	stream_id = 0;
	id = 62;
	name = "GlobalDef_MetricClassRecorder";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} metric;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} recorder;
	} align(1);
};

event {
	stream_id = 0;
	id = 63;
	name = "GlobalDef_MetricInstance";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} metricClass;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} recorder;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} metricScope;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} scope;
	} align(1);
};

event {
	stream_id = 0;
	id = 64;
	name = "GlobalDef_MetricMember";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} description;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} metricType;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} metricMode;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} valueType;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} base;
		integer {
			signed = true;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} exponent;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} unit;
	} align(1);
};

event {
	stream_id = 0;
	id = 65;
	name = "GlobalDef_Paradigm";
	fields := struct {
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} paradigm;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} paradigmClass;
	} align(1);
};

event {
	stream_id = 0;
	id = 66;
	name = "GlobalDef_ParadigmProperty";
	fields := struct {
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} paradigm;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} property;
	} align(1);
};

event {
	stream_id = 0;
	id = 67;
	name = "GlobalDef_Parameter";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} parameterType;
	} align(1);
};

event {
	stream_id = 0;
	id = 68;
	name = "GlobalDef_Region";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} canonicalName;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} description;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} regionRole;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} paradigm;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} regionFlag;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} sourceFile;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} beginLineNumber;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} endLineNumber;
	} align(1);
};

event {
	stream_id = 0;
	id = 69;
	name = "GlobalDef_RmaWin";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} comm;
	} align(1);
};

event {
	stream_id = 0;
	id = 70;
	name = "GlobalDef_SourceCodeLocation";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} file;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} lineNumber;
	} align(1);
};

event {
	stream_id = 0;
	id = 71;
	name = "GlobalDef_String";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		string {
			encoding = UTF8;
		} stringValue;
	} align(1);
};

event {
	stream_id = 0;
	id = 72;
	name = "GlobalDef_SystemTreeNode";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} className;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} systemTreeParent;
	} align(1);
};

event {
	stream_id = 0;
	id = 73;
	name = "GlobalDef_SystemTreeNodeDomain";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} systemTreeNode;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} systemTreeDomain;
	} align(1);
};

event {
	stream_id = 0;
	id = 74;
	name = "GlobalDef_SystemTreeNodeProperty";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} systemTreeNode;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
	} align(1);
};
