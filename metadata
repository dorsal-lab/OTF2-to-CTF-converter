/* CTF 1.8 */

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015-2020 Philippe Proulx <pproulx@efficios.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 *
 * The following code was generated by barectf v3.1.0
 * on 2022-11-16T16:15:48.464508.
 *
 * For more details, see <https://barectf.org/>.
 */

trace {
	major = 1;
	minor = 8;
	byte_order = le;
	packet.header := struct {
		integer {
			signed = false;
			size = 32;
			align = 8;
			byte_order = native;
			base = 10;
		} magic;
		integer {
			signed = false;
			size = 64;
			align = 8;
			byte_order = native;
			base = 10;
		} stream_id;
	} align(8);
};

env {
	domain = "bare";
	tracer_name = "otf2";
	tracer_major = 3;
	tracer_minor = 1;
	tracer_patch = 0;
	tracer_pre = "";
	barectf_gen_date = "2022-11-16T16:15:48.464508";
};

clock {
	name = default;
	freq = 1000000000;
	precision = 0;
	offset_s = 0;
	offset = 0;
	absolute = false;
};

/* Data stream type `default` */
stream {
	id = 0;
	packet.context := struct {
		integer {
			signed = false;
			size = 64;
			align = 8;
			byte_order = native;
			base = 10;
		} packet_size;
		integer {
			signed = false;
			size = 64;
			align = 8;
			byte_order = native;
			base = 10;
		} content_size;
		integer {
			signed = false;
			size = 64;
			align = 8;
			byte_order = native;
			base = 10;
			map = clock.default.value;
		} timestamp_begin;
		integer {
			signed = false;
			size = 64;
			align = 8;
			byte_order = native;
			base = 10;
			map = clock.default.value;
		} timestamp_end;
		integer {
			signed = false;
			size = 64;
			align = 8;
			byte_order = native;
			base = 10;
		} events_discarded;
	} align(8);
	event.header := struct {
		integer {
			signed = false;
			size = 64;
			align = 8;
			byte_order = native;
			base = 10;
		} id;
		integer {
			signed = false;
			size = 64;
			align = 8;
			byte_order = native;
			base = 10;
			map = clock.default.value;
		} timestamp;
	} align(8);
};

event {
	stream_id = 0;
	id = 0;
	name = "EventAttribute_Attribute";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 1;
	name = "EventAttribute_CallingContext";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 2;
	name = "EventAttribute_Comm";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 3;
	name = "EventAttribute_Double";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		floating_point {
			mant_dig = 53;
			exp_dig = 11;
			align = 64;
			byte_order = native;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 4;
	name = "EventAttribute_Float";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		floating_point {
			mant_dig = 24;
			exp_dig = 8;
			align = 32;
			byte_order = native;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 5;
	name = "EventAttribute_Group";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 6;
	name = "EventAttribute_Int16";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = true;
			size = 16;
			align = 16;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 7;
	name = "EventAttribute_Int32";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = true;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 8;
	name = "EventAttribute_Int64";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = true;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 9;
	name = "EventAttribute_Int8";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = true;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 10;
	name = "EventAttribute_InterruptGenerator";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 11;
	name = "EventAttribute_IoFile";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 12;
	name = "EventAttribute_IoHandle";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 13;
	name = "EventAttribute_Location";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 14;
	name = "EventAttribute_LocationGroup";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 15;
	name = "EventAttribute_Metric";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 16;
	name = "EventAttribute_Parameter";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 17;
	name = "EventAttribute_Region";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 18;
	name = "EventAttribute_RmaWin";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 19;
	name = "EventAttribute_SourceCodeLocation";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 20;
	name = "EventAttribute_String";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 21;
	name = "EventAttribute_UInt16";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 16;
			align = 16;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 22;
	name = "EventAttribute_UInt32";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 23;
	name = "EventAttribute_UInt64";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 24;
	name = "EventAttribute_UInt8";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} attribute;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 25;
	name = "Event_BufferFlush";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} stopTime;
	} align(1);
};

event {
	stream_id = 0;
	id = 26;
	name = "Event_CallingContextEnter";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} callingContext;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} unwindDistance;
	} align(1);
};

event {
	stream_id = 0;
	id = 27;
	name = "Event_CallingContextLeave";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} callingContext;
	} align(1);
};

event {
	stream_id = 0;
	id = 28;
	name = "Event_CallingContextSample";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} callingContext;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} unwindDistance;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} interruptGenerator;
	} align(1);
};

event {
	stream_id = 0;
	id = 29;
	name = "Event_Enter";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} region;
	} align(1);
};

event {
	stream_id = 0;
	id = 30;
	name = "Event_IoAcquireLock";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} handle;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} lockType;
	} align(1);
};

event {
	stream_id = 0;
	id = 31;
	name = "Event_IoChangeStatusFlags";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} handle;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} statusFlags;
	} align(1);
};

event {
	stream_id = 0;
	id = 32;
	name = "Event_IoCreateHandle";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} handle;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} mode;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} creationFlags;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} statusFlags;
	} align(1);
};

event {
	stream_id = 0;
	id = 33;
	name = "Event_IoDeleteFile";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} ioParadigm;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} file;
	} align(1);
};

event {
	stream_id = 0;
	id = 34;
	name = "Event_IoDestroyHandle";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} handle;
	} align(1);
};

event {
	stream_id = 0;
	id = 35;
	name = "Event_IoDuplicateHandle";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} oldHandle;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} newHandle;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} statusFlags;
	} align(1);
};

event {
	stream_id = 0;
	id = 36;
	name = "Event_IoOperationBegin";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} handle;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} mode;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} operationFlags;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} bytesRequest;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} matchingId;
	} align(1);
};

event {
	stream_id = 0;
	id = 37;
	name = "Event_IoOperationCancelled";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} handle;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} matchingId;
	} align(1);
};

event {
	stream_id = 0;
	id = 38;
	name = "Event_IoOperationComplete";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} handle;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} bytesResult;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} matchingId;
	} align(1);
};

event {
	stream_id = 0;
	id = 39;
	name = "Event_IoOperationIssued";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} handle;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} matchingId;
	} align(1);
};

event {
	stream_id = 0;
	id = 40;
	name = "Event_IoOperationTest";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} handle;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} matchingId;
	} align(1);
};

event {
	stream_id = 0;
	id = 41;
	name = "Event_IoReleaseLock";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} handle;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} lockType;
	} align(1);
};

event {
	stream_id = 0;
	id = 42;
	name = "Event_IoSeek";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} handle;
		integer {
			signed = true;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} offsetRequest;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} whence;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} offsetResult;
	} align(1);
};

event {
	stream_id = 0;
	id = 43;
	name = "Event_IoTryLock";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} handle;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} lockType;
	} align(1);
};

event {
	stream_id = 0;
	id = 44;
	name = "Event_Leave";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} region;
	} align(1);
};

event {
	stream_id = 0;
	id = 45;
	name = "Event_MeasurementOnOff";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} measurementMode;
	} align(1);
};

event {
	stream_id = 0;
	id = 46;
	name = "Event_Metric";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} metric;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} numberOfMetrics;
	} align(1);
};

event {
	stream_id = 0;
	id = 47;
	name = "Event_MpiCollectiveBegin";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
	} align(1);
};

event {
	stream_id = 0;
	id = 48;
	name = "Event_MpiCollectiveEnd";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} collectiveOp;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} communicator;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} root;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} sizeSent;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} sizeReceived;
	} align(1);
};

event {
	stream_id = 0;
	id = 49;
	name = "Event_MpiIrecv";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} sender;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} communicator;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} msgTag;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} msgLength;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} requestID;
	} align(1);
};

event {
	stream_id = 0;
	id = 50;
	name = "Event_MpiIrecvRequest";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} requestID;
	} align(1);
};

event {
	stream_id = 0;
	id = 51;
	name = "Event_MpiIsend";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} receiver;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} communicator;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} msgTag;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} msgLength;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} requestID;
	} align(1);
};

event {
	stream_id = 0;
	id = 52;
	name = "Event_MpiIsendComplete";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} requestID;
	} align(1);
};

event {
	stream_id = 0;
	id = 53;
	name = "Event_MpiRecv";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} sender;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} communicator;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} msgTag;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} msgLength;
	} align(1);
};

event {
	stream_id = 0;
	id = 54;
	name = "Event_MpiRequestCancelled";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} requestID;
	} align(1);
};

event {
	stream_id = 0;
	id = 55;
	name = "Event_MpiRequestTest";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} requestID;
	} align(1);
};

event {
	stream_id = 0;
	id = 56;
	name = "Event_MpiSend";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} receiver;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} communicator;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} msgTag;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} msgLength;
	} align(1);
};

event {
	stream_id = 0;
	id = 57;
	name = "Event_OmpAcquireLock";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} lockID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} acquisitionOrder;
	} align(1);
};

event {
	stream_id = 0;
	id = 58;
	name = "Event_OmpFork";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} numberOfRequestedThreads;
	} align(1);
};

event {
	stream_id = 0;
	id = 59;
	name = "Event_OmpJoin";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
	} align(1);
};

event {
	stream_id = 0;
	id = 60;
	name = "Event_OmpReleaseLock";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} lockID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} acquisitionOrder;
	} align(1);
};

event {
	stream_id = 0;
	id = 61;
	name = "Event_OmpTaskComplete";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} taskID;
	} align(1);
};

event {
	stream_id = 0;
	id = 62;
	name = "Event_OmpTaskCreate";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} taskID;
	} align(1);
};

event {
	stream_id = 0;
	id = 63;
	name = "Event_OmpTaskSwitch";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} taskID;
	} align(1);
};

event {
	stream_id = 0;
	id = 64;
	name = "Event_ParameterInt";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} parameter;
		integer {
			signed = true;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 65;
	name = "Event_ParameterString";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} parameter;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} stringID;
	} align(1);
};

event {
	stream_id = 0;
	id = 66;
	name = "Event_ParameterUnsignedInt";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} parameter;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 67;
	name = "Event_ProgramArgument";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} programArgument;
	} align(1);
};

event {
	stream_id = 0;
	id = 68;
	name = "Event_ProgramBegin";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} programName;
	} align(1);
};

event {
	stream_id = 0;
	id = 69;
	name = "Event_ProgramEnd";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = true;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} exitStatus;
	} align(1);
};

event {
	stream_id = 0;
	id = 70;
	name = "Event_RmaAcquireLock";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} remote;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} lockId;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} lockType;
	} align(1);
};

event {
	stream_id = 0;
	id = 71;
	name = "Event_RmaAtomic";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} remote;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} type;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} bytesSent;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} bytesReceived;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} matchingId;
	} align(1);
};

event {
	stream_id = 0;
	id = 72;
	name = "Event_RmaCollectiveBegin";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
	} align(1);
};

event {
	stream_id = 0;
	id = 73;
	name = "Event_RmaCollectiveEnd";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} collectiveOp;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} syncLevel;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} root;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} bytesSent;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} bytesReceived;
	} align(1);
};

event {
	stream_id = 0;
	id = 74;
	name = "Event_RmaGet";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} remote;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} bytes;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} matchingId;
	} align(1);
};

event {
	stream_id = 0;
	id = 75;
	name = "Event_RmaGroupSync";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} syncLevel;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} group;
	} align(1);
};

event {
	stream_id = 0;
	id = 76;
	name = "Event_RmaOpCompleteBlocking";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} matchingId;
	} align(1);
};

event {
	stream_id = 0;
	id = 77;
	name = "Event_RmaOpCompleteNonBlocking";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} matchingId;
	} align(1);
};

event {
	stream_id = 0;
	id = 78;
	name = "Event_RmaOpCompleteRemote";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} matchingId;
	} align(1);
};

event {
	stream_id = 0;
	id = 79;
	name = "Event_RmaOpTest";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} matchingId;
	} align(1);
};

event {
	stream_id = 0;
	id = 80;
	name = "Event_RmaPut";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} remote;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} bytes;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} matchingId;
	} align(1);
};

event {
	stream_id = 0;
	id = 81;
	name = "Event_RmaReleaseLock";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} remote;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} lockId;
	} align(1);
};

event {
	stream_id = 0;
	id = 82;
	name = "Event_RmaRequestLock";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} remote;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} lockId;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} lockType;
	} align(1);
};

event {
	stream_id = 0;
	id = 83;
	name = "Event_RmaSync";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} remote;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} syncType;
	} align(1);
};

event {
	stream_id = 0;
	id = 84;
	name = "Event_RmaTryLock";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} remote;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} lockId;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} lockType;
	} align(1);
};

event {
	stream_id = 0;
	id = 85;
	name = "Event_RmaWaitChange";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
	} align(1);
};

event {
	stream_id = 0;
	id = 86;
	name = "Event_RmaWinCreate";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
	} align(1);
};

event {
	stream_id = 0;
	id = 87;
	name = "Event_RmaWinDestroy";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} win;
	} align(1);
};

event {
	stream_id = 0;
	id = 88;
	name = "Event_ThreadAcquireLock";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} model;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} lockID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} acquisitionOrder;
	} align(1);
};

event {
	stream_id = 0;
	id = 89;
	name = "Event_ThreadBegin";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} threadContingent;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} sequenceCount;
	} align(1);
};

event {
	stream_id = 0;
	id = 90;
	name = "Event_ThreadCreate";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} threadContingent;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} sequenceCount;
	} align(1);
};

event {
	stream_id = 0;
	id = 91;
	name = "Event_ThreadEnd";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} threadContingent;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} sequenceCount;
	} align(1);
};

event {
	stream_id = 0;
	id = 92;
	name = "Event_ThreadFork";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} model;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} matchnumberOfRequestedThreadsingId;
	} align(1);
};

event {
	stream_id = 0;
	id = 93;
	name = "Event_ThreadJoin";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} model;
	} align(1);
};

event {
	stream_id = 0;
	id = 94;
	name = "Event_ThreadReleaseLock";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} model;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} lockID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} acquisitionOrder;
	} align(1);
};

event {
	stream_id = 0;
	id = 95;
	name = "Event_ThreadTaskComplete";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} threadTeam;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} creatingThread;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} generationNumber;
	} align(1);
};

event {
	stream_id = 0;
	id = 96;
	name = "Event_ThreadTaskCreate";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} threadTeam;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} creatingThread;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} generationNumber;
	} align(1);
};

event {
	stream_id = 0;
	id = 97;
	name = "Event_ThreadTaskSwitch";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} threadTeam;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} creatingThread;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} generationNumber;
	} align(1);
};

event {
	stream_id = 0;
	id = 98;
	name = "Event_ThreadTeamBegin";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} threadTeam;
	} align(1);
};

event {
	stream_id = 0;
	id = 99;
	name = "Event_ThreadTeamEnd";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} threadTeam;
	} align(1);
};

event {
	stream_id = 0;
	id = 100;
	name = "Event_ThreadWait";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} threadContingent;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} sequenceCount;
	} align(1);
};

event {
	stream_id = 0;
	id = 101;
	name = "GlobalDefAttribute_Attribute";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 102;
	name = "GlobalDefAttribute_CallingContext";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 103;
	name = "GlobalDefAttribute_Comm";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 104;
	name = "GlobalDefAttribute_Double";
	fields := struct {
		floating_point {
			mant_dig = 53;
			exp_dig = 11;
			align = 64;
			byte_order = native;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 105;
	name = "GlobalDefAttribute_Float";
	fields := struct {
		floating_point {
			mant_dig = 24;
			exp_dig = 8;
			align = 32;
			byte_order = native;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 106;
	name = "GlobalDefAttribute_Group";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 107;
	name = "GlobalDefAttribute_Int16";
	fields := struct {
		integer {
			signed = true;
			size = 16;
			align = 16;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 108;
	name = "GlobalDefAttribute_Int32";
	fields := struct {
		integer {
			signed = true;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 109;
	name = "GlobalDefAttribute_Int64";
	fields := struct {
		integer {
			signed = true;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 110;
	name = "GlobalDefAttribute_Int8";
	fields := struct {
		integer {
			signed = true;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 111;
	name = "GlobalDefAttribute_InterruptGenerator";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 112;
	name = "GlobalDefAttribute_IoFile";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 113;
	name = "GlobalDefAttribute_IoHandle";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 114;
	name = "GlobalDefAttribute_Location";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 115;
	name = "GlobalDefAttribute_Metric";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 116;
	name = "GlobalDefAttribute_Parameter";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 117;
	name = "GlobalDefAttribute_Region";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 118;
	name = "GlobalDefAttribute_RmaWin";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 119;
	name = "GlobalDefAttribute_SourceCodeLocation";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 120;
	name = "GlobalDefAttribute_String";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 121;
	name = "GlobalDefAttribute_UInt16";
	fields := struct {
		integer {
			signed = false;
			size = 16;
			align = 16;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 122;
	name = "GlobalDefAttribute_UInt32";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 123;
	name = "GlobalDefAttribute_UInt64";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 124;
	name = "GlobalDefAttribute_UInt8";
	fields := struct {
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} value;
	} align(1);
};

event {
	stream_id = 0;
	id = 125;
	name = "GlobalDef_Attribute";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} description;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} type;
	} align(1);
};

event {
	stream_id = 0;
	id = 126;
	name = "GlobalDef_CallingContext";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} region;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} sourceCodeLocation;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} parent;
	} align(1);
};

event {
	stream_id = 0;
	id = 127;
	name = "GlobalDef_CallingContextProperty";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} callingContext;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
	} align(1);
};

event {
	stream_id = 0;
	id = 128;
	name = "GlobalDef_Callpath";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} parent;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} region;
	} align(1);
};

event {
	stream_id = 0;
	id = 129;
	name = "GlobalDef_CallpathParameter";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} callpath;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} parameter;
	} align(1);
};

event {
	stream_id = 0;
	id = 130;
	name = "GlobalDef_Callsite";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} sourceFile;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} lineNumber;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} enteredRegion;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} leftRegion;
	} align(1);
};

event {
	stream_id = 0;
	id = 131;
	name = "GlobalDef_CartCoordinate";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} cartTopology;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} rank;
		integer {
			signed = false;
			size = 32;
			align = 8;
			byte_order = native;
			base = 10;
		} __coordinates_len;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} coordinates[__coordinates_len];
	} align(1);
};

event {
	stream_id = 0;
	id = 132;
	name = "GlobalDef_CartDimension";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} size;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} cartPeriodicity;
	} align(1);
};

event {
	stream_id = 0;
	id = 133;
	name = "GlobalDef_CartTopology";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} communicator;
		integer {
			signed = false;
			size = 32;
			align = 8;
			byte_order = native;
			base = 10;
		} __cartDimensions_len;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} cartDimensions[__cartDimensions_len];
	} align(1);
};

event {
	stream_id = 0;
	id = 134;
	name = "GlobalDef_ClockProperties";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} timerResolution;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} globalOffset;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} traceLength;
	} align(1);
};

event {
	stream_id = 0;
	id = 135;
	name = "GlobalDef_Comm";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} group;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} parent;
	} align(1);
};

event {
	stream_id = 0;
	id = 136;
	name = "GlobalDef_Group";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} groupType;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} paradigm;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} groupFlags;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} numberOfMembers;
	} align(1);
};

event {
	stream_id = 0;
	id = 137;
	name = "GlobalDef_GroupMember";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} group;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} rank;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} location;
	} align(1);
};

event {
	stream_id = 0;
	id = 138;
	name = "GlobalDef_InterruptGenerator";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} interruptGeneratorMode;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} base;
		integer {
			signed = true;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} exponent;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} period;
	} align(1);
};

event {
	stream_id = 0;
	id = 139;
	name = "GlobalDef_IoDirectory";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} scope;
	} align(1);
};

event {
	stream_id = 0;
	id = 140;
	name = "GlobalDef_IoFileProperty";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} ioFile;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
	} align(1);
};

event {
	stream_id = 0;
	id = 141;
	name = "GlobalDef_IoHandle";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} file;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} ioParadigm;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} ioHandleFlags;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} comm;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} parent;
	} align(1);
};

event {
	stream_id = 0;
	id = 142;
	name = "GlobalDef_IoParadigm";
	fields := struct {
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} identification;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} ioParadigmClass;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} ioParadigmFlags;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} numberOfProperties;
	} align(1);
};

event {
	stream_id = 0;
	id = 143;
	name = "GlobalDef_IoParadigmProperty";
	fields := struct {
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} ioParadigm;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} ioParadigmProperty;
	} align(1);
};

event {
	stream_id = 0;
	id = 144;
	name = "GlobalDef_IoPreCreatedHandleState";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} ioHandle;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} mode;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} statusFlags;
	} align(1);
};

event {
	stream_id = 0;
	id = 145;
	name = "GlobalDef_IoRegularFile";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} scope;
	} align(1);
};

event {
	stream_id = 0;
	id = 146;
	name = "GlobalDef_Location";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} locationType;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} numberOfEvents;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} locationGroup;
	} align(1);
};

event {
	stream_id = 0;
	id = 147;
	name = "GlobalDef_LocationGroup";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} locationGroupType;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} systemTreeParent;
	} align(1);
};

event {
	stream_id = 0;
	id = 148;
	name = "GlobalDef_LocationGroupProperty";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} locationGroup;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
	} align(1);
};

event {
	stream_id = 0;
	id = 149;
	name = "GlobalDef_LocationProperty";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} location;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
	} align(1);
};

event {
	stream_id = 0;
	id = 150;
	name = "GlobalDef_MetricClass";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 8;
			byte_order = native;
			base = 10;
		} __metricMembers_len;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} metricMembers[__metricMembers_len];
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} metricOccurrence;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} recorderKind;
	} align(1);
};

event {
	stream_id = 0;
	id = 151;
	name = "GlobalDef_MetricClassRecorder";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} metric;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} recorder;
	} align(1);
};

event {
	stream_id = 0;
	id = 152;
	name = "GlobalDef_MetricInstance";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} metricClass;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} recorder;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} metricScope;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} scope;
	} align(1);
};

event {
	stream_id = 0;
	id = 153;
	name = "GlobalDef_MetricMember";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} description;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} metricType;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} metricMode;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} valueType;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} base;
		integer {
			signed = true;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} exponent;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} unit;
	} align(1);
};

event {
	stream_id = 0;
	id = 154;
	name = "GlobalDef_Paradigm";
	fields := struct {
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} paradigm;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} paradigmClass;
	} align(1);
};

event {
	stream_id = 0;
	id = 155;
	name = "GlobalDef_ParadigmProperty";
	fields := struct {
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} paradigm;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} property;
	} align(1);
};

event {
	stream_id = 0;
	id = 156;
	name = "GlobalDef_Parameter";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} parameterType;
	} align(1);
};

event {
	stream_id = 0;
	id = 157;
	name = "GlobalDef_Region";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} canonicalName;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} description;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} regionRole;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} paradigm;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} regionFlag;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} sourceFile;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} beginLineNumber;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} endLineNumber;
	} align(1);
};

event {
	stream_id = 0;
	id = 158;
	name = "GlobalDef_RmaWin";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} comm;
	} align(1);
};

event {
	stream_id = 0;
	id = 159;
	name = "GlobalDef_SourceCodeLocation";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} file;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} lineNumber;
	} align(1);
};

event {
	stream_id = 0;
	id = 160;
	name = "GlobalDef_String";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		string {
			encoding = UTF8;
		} stringValue;
	} align(1);
};

event {
	stream_id = 0;
	id = 161;
	name = "GlobalDef_SystemTreeNode";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} self;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} className;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} systemTreeParent;
	} align(1);
};

event {
	stream_id = 0;
	id = 162;
	name = "GlobalDef_SystemTreeNodeDomain";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} systemTreeNode;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} systemTreeDomain;
	} align(1);
};

event {
	stream_id = 0;
	id = 163;
	name = "GlobalDef_SystemTreeNodeProperty";
	fields := struct {
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} systemTreeNode;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} name;
	} align(1);
};

event {
	stream_id = 0;
	id = 164;
	name = "MetricValue_Double";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} metric;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} index;
		floating_point {
			mant_dig = 53;
			exp_dig = 11;
			align = 64;
			byte_order = native;
		} metricValue;
	} align(1);
};

event {
	stream_id = 0;
	id = 165;
	name = "MetricValue_Int64";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} metric;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} index;
		integer {
			signed = true;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} metricValue;
	} align(1);
};

event {
	stream_id = 0;
	id = 166;
	name = "MetricValue_UInt64";
	fields := struct {
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} locationID;
		integer {
			signed = false;
			size = 32;
			align = 32;
			byte_order = native;
			base = 10;
		} metric;
		integer {
			signed = false;
			size = 8;
			align = 8;
			byte_order = native;
			base = 10;
		} index;
		integer {
			signed = false;
			size = 64;
			align = 64;
			byte_order = native;
			base = 10;
		} metricValue;
	} align(1);
};
