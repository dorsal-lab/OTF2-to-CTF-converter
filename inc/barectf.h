#ifndef _BARECTF_H
#define _BARECTF_H

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015-2020 Philippe Proulx <pproulx@efficios.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 *
 * The following code was generated by barectf v3.0.1
 * on 2021-07-08T11:37:19.498641.
 *
 * For more details, see <https://barectf.org/>.
 */

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif


#define barectf_trace_Event_Enter barectf_default_trace_Event_Enter
#define barectf_trace_Event_Leave barectf_default_trace_Event_Leave
#define barectf_trace_Event_MpiCollectiveBegin barectf_default_trace_Event_MpiCollectiveBegin
#define barectf_trace_Event_MpiCollectiveEnd barectf_default_trace_Event_MpiCollectiveEnd
#define barectf_trace_Event_MpiIrecv barectf_default_trace_Event_MpiIrecv
#define barectf_trace_Event_MpiIrecvRequest barectf_default_trace_Event_MpiIrecvRequest
#define barectf_trace_Event_MpiIsend barectf_default_trace_Event_MpiIsend
#define barectf_trace_Event_MpiIsendComplete barectf_default_trace_Event_MpiIsendComplete
#define barectf_trace_Event_MpiRecv barectf_default_trace_Event_MpiRecv
#define barectf_trace_Event_MpiRequestCancelled barectf_default_trace_Event_MpiRequestCancelled
#define barectf_trace_Event_MpiRequestTest barectf_default_trace_Event_MpiRequestTest
#define barectf_trace_Event_MpiSend barectf_default_trace_Event_MpiSend
#define barectf_trace_GlobalDefAttribute_Attribute barectf_default_trace_GlobalDefAttribute_Attribute
#define barectf_trace_GlobalDefAttribute_CallingContext barectf_default_trace_GlobalDefAttribute_CallingContext
#define barectf_trace_GlobalDefAttribute_Comm barectf_default_trace_GlobalDefAttribute_Comm
#define barectf_trace_GlobalDefAttribute_Double barectf_default_trace_GlobalDefAttribute_Double
#define barectf_trace_GlobalDefAttribute_Float barectf_default_trace_GlobalDefAttribute_Float
#define barectf_trace_GlobalDefAttribute_Group barectf_default_trace_GlobalDefAttribute_Group
#define barectf_trace_GlobalDefAttribute_Int16 barectf_default_trace_GlobalDefAttribute_Int16
#define barectf_trace_GlobalDefAttribute_Int32 barectf_default_trace_GlobalDefAttribute_Int32
#define barectf_trace_GlobalDefAttribute_Int64 barectf_default_trace_GlobalDefAttribute_Int64
#define barectf_trace_GlobalDefAttribute_Int8 barectf_default_trace_GlobalDefAttribute_Int8
#define barectf_trace_GlobalDefAttribute_InterruptGenerator barectf_default_trace_GlobalDefAttribute_InterruptGenerator
#define barectf_trace_GlobalDefAttribute_IoFile barectf_default_trace_GlobalDefAttribute_IoFile
#define barectf_trace_GlobalDefAttribute_IoHandle barectf_default_trace_GlobalDefAttribute_IoHandle
#define barectf_trace_GlobalDefAttribute_Location barectf_default_trace_GlobalDefAttribute_Location
#define barectf_trace_GlobalDefAttribute_Metric barectf_default_trace_GlobalDefAttribute_Metric
#define barectf_trace_GlobalDefAttribute_Parameter barectf_default_trace_GlobalDefAttribute_Parameter
#define barectf_trace_GlobalDefAttribute_Region barectf_default_trace_GlobalDefAttribute_Region
#define barectf_trace_GlobalDefAttribute_RmaWin barectf_default_trace_GlobalDefAttribute_RmaWin
#define barectf_trace_GlobalDefAttribute_SourceCodeLocation barectf_default_trace_GlobalDefAttribute_SourceCodeLocation
#define barectf_trace_GlobalDefAttribute_String barectf_default_trace_GlobalDefAttribute_String
#define barectf_trace_GlobalDefAttribute_UInt16 barectf_default_trace_GlobalDefAttribute_UInt16
#define barectf_trace_GlobalDefAttribute_UInt32 barectf_default_trace_GlobalDefAttribute_UInt32
#define barectf_trace_GlobalDefAttribute_UInt64 barectf_default_trace_GlobalDefAttribute_UInt64
#define barectf_trace_GlobalDefAttribute_UInt8 barectf_default_trace_GlobalDefAttribute_UInt8
#define barectf_trace_GlobalDef_Attribute barectf_default_trace_GlobalDef_Attribute
#define barectf_trace_GlobalDef_CallingContext barectf_default_trace_GlobalDef_CallingContext
#define barectf_trace_GlobalDef_CallingContextProperty barectf_default_trace_GlobalDef_CallingContextProperty
#define barectf_trace_GlobalDef_Callpath barectf_default_trace_GlobalDef_Callpath
#define barectf_trace_GlobalDef_CallpathParameter barectf_default_trace_GlobalDef_CallpathParameter
#define barectf_trace_GlobalDef_Callsite barectf_default_trace_GlobalDef_Callsite
#define barectf_trace_GlobalDef_CartCoordinate barectf_default_trace_GlobalDef_CartCoordinate
#define barectf_trace_GlobalDef_CartDimension barectf_default_trace_GlobalDef_CartDimension
#define barectf_trace_GlobalDef_CartTopology barectf_default_trace_GlobalDef_CartTopology
#define barectf_trace_GlobalDef_ClockProperties barectf_default_trace_GlobalDef_ClockProperties
#define barectf_trace_GlobalDef_Comm barectf_default_trace_GlobalDef_Comm
#define barectf_trace_GlobalDef_Group barectf_default_trace_GlobalDef_Group
#define barectf_trace_GlobalDef_GroupMember barectf_default_trace_GlobalDef_GroupMember
#define barectf_trace_GlobalDef_InterruptGenerator barectf_default_trace_GlobalDef_InterruptGenerator
#define barectf_trace_GlobalDef_IoDirectory barectf_default_trace_GlobalDef_IoDirectory
#define barectf_trace_GlobalDef_IoFileProperty barectf_default_trace_GlobalDef_IoFileProperty
#define barectf_trace_GlobalDef_IoHandle barectf_default_trace_GlobalDef_IoHandle
#define barectf_trace_GlobalDef_IoParadigm barectf_default_trace_GlobalDef_IoParadigm
#define barectf_trace_GlobalDef_IoParadigmProperty barectf_default_trace_GlobalDef_IoParadigmProperty
#define barectf_trace_GlobalDef_IoPreCreatedHandleState barectf_default_trace_GlobalDef_IoPreCreatedHandleState
#define barectf_trace_GlobalDef_IoRegularFile barectf_default_trace_GlobalDef_IoRegularFile
#define barectf_trace_GlobalDef_Location barectf_default_trace_GlobalDef_Location
#define barectf_trace_GlobalDef_LocationGroup barectf_default_trace_GlobalDef_LocationGroup
#define barectf_trace_GlobalDef_LocationGroupProperty barectf_default_trace_GlobalDef_LocationGroupProperty
#define barectf_trace_GlobalDef_LocationProperty barectf_default_trace_GlobalDef_LocationProperty
#define barectf_trace_GlobalDef_MetricClass barectf_default_trace_GlobalDef_MetricClass
#define barectf_trace_GlobalDef_MetricClassRecorder barectf_default_trace_GlobalDef_MetricClassRecorder
#define barectf_trace_GlobalDef_MetricInstance barectf_default_trace_GlobalDef_MetricInstance
#define barectf_trace_GlobalDef_MetricMember barectf_default_trace_GlobalDef_MetricMember
#define barectf_trace_GlobalDef_Paradigm barectf_default_trace_GlobalDef_Paradigm
#define barectf_trace_GlobalDef_ParadigmProperty barectf_default_trace_GlobalDef_ParadigmProperty
#define barectf_trace_GlobalDef_Parameter barectf_default_trace_GlobalDef_Parameter
#define barectf_trace_GlobalDef_Region barectf_default_trace_GlobalDef_Region
#define barectf_trace_GlobalDef_RmaWin barectf_default_trace_GlobalDef_RmaWin
#define barectf_trace_GlobalDef_SourceCodeLocation barectf_default_trace_GlobalDef_SourceCodeLocation
#define barectf_trace_GlobalDef_String barectf_default_trace_GlobalDef_String
#define barectf_trace_GlobalDef_SystemTreeNode barectf_default_trace_GlobalDef_SystemTreeNode
#define barectf_trace_GlobalDef_SystemTreeNodeDomain barectf_default_trace_GlobalDef_SystemTreeNodeDomain
#define barectf_trace_GlobalDef_SystemTreeNodeProperty barectf_default_trace_GlobalDef_SystemTreeNodeProperty

struct barectf_ctx;

uint32_t barectf_packet_size(const void *vctx);
int barectf_packet_is_full(const void *vctx);
int barectf_packet_is_empty(const void *vctx);
uint32_t barectf_packet_events_discarded(const void *vctx);
uint32_t barectf_discarded_event_records_count(const void * const vctx);
uint8_t *barectf_packet_buf(const void *vctx);
uint8_t *barectf_packet_buf_addr(const void * const vctx);
void barectf_packet_set_buf(void *vctx, uint8_t *buf, uint32_t buf_size);
uint32_t barectf_packet_buf_size(const void *vctx);
int barectf_packet_is_open(const void *vctx);
int barectf_is_in_tracing_section(const void *vctx);
volatile const int *barectf_is_in_tracing_section_ptr(const void *vctx);
int barectf_is_tracing_enabled(const void *vctx);
void barectf_enable_tracing(void *vctx, int enable);

/* barectf platform callbacks */
struct barectf_platform_callbacks {
	/* Clock source callbacks */
	uint64_t (*default_clock_get_value)(void *);

	/* Is the back end full? */
	int (*is_backend_full)(void *);

	/* Open packet */
	void (*open_packet)(void *);

	/* Close packet */
	void (*close_packet)(void *);
};

/* Common barectf context */
struct barectf_ctx {
	/* Platform callbacks */
	struct barectf_platform_callbacks cbs;

	/* Platform data (passed to callbacks) */
	void *data;

	/* Output buffer (will contain a CTF binary packet) */
	uint8_t *buf;

	/* Packet's total size (bits) */
	uint32_t packet_size;

	/* Packet's content size (bits) */
	uint32_t content_size;

	/* Current position from beginning of packet (bits) */
	uint32_t at;

	/* Size of packet header + context fields (content offset) */
	uint32_t off_content;

	/* Discarded event records counter snapshot */
	uint32_t events_discarded;

	/* Current packet is open? */
	int packet_is_open;

	/* In tracing code? */
	volatile int in_tracing_section;

	/* Tracing is enabled? */
	volatile int is_tracing_enabled;

	/* Use current/last event record timestamp when opening/closing packets */
	int use_cur_last_event_ts;
};

/* Context for data stream type `default` */
struct barectf_default_ctx {
	/* Parent */
	struct barectf_ctx parent;

	/* Config-specific members follow */
	uint32_t off_ph_magic;
	uint32_t off_ph_stream_id;
	uint32_t off_pc_packet_size;
	uint32_t off_pc_content_size;
	uint32_t off_pc_timestamp_begin;
	uint32_t off_pc_timestamp_end;
	uint32_t off_pc_events_discarded;
	uint64_t cur_last_event_ts;
};

/* Initialize context */
void barectf_init(void *vctx,
	uint8_t *buf, uint32_t buf_size,
	const struct barectf_platform_callbacks cbs, void *data);

/* Open packet for data stream type `default` */
void barectf_default_open_packet(
	struct barectf_default_ctx *sctx);

/* Close packet for data stream type `default` */
void barectf_default_close_packet(struct barectf_default_ctx *sctx);

/* Trace (data stream type `default`, event record type `Event_Enter`) */
void barectf_default_trace_Event_Enter(struct barectf_default_ctx *sctx,
	uint64_t p_locationID,
	uint32_t p_region);

/* Trace (data stream type `default`, event record type `Event_Leave`) */
void barectf_default_trace_Event_Leave(struct barectf_default_ctx *sctx,
	uint64_t p_locationID,
	uint32_t p_region);

/* Trace (data stream type `default`, event record type `Event_MpiCollectiveBegin`) */
void barectf_default_trace_Event_MpiCollectiveBegin(struct barectf_default_ctx *sctx,
	uint64_t p_locationID);

/* Trace (data stream type `default`, event record type `Event_MpiCollectiveEnd`) */
void barectf_default_trace_Event_MpiCollectiveEnd(struct barectf_default_ctx *sctx,
	uint64_t p_locationID,
	uint8_t p_collectiveOp,
	uint32_t p_communicator,
	uint32_t p_root,
	uint64_t p_sizeSent,
	uint64_t p_sizeReceived);

/* Trace (data stream type `default`, event record type `Event_MpiIrecv`) */
void barectf_default_trace_Event_MpiIrecv(struct barectf_default_ctx *sctx,
	uint64_t p_locationID,
	uint32_t p_receiver,
	uint32_t p_communicator,
	uint32_t p_msgTag,
	uint64_t p_msgLength,
	uint64_t p_requestID);

/* Trace (data stream type `default`, event record type `Event_MpiIrecvRequest`) */
void barectf_default_trace_Event_MpiIrecvRequest(struct barectf_default_ctx *sctx,
	uint64_t p_locationID,
	uint64_t p_requestID);

/* Trace (data stream type `default`, event record type `Event_MpiIsend`) */
void barectf_default_trace_Event_MpiIsend(struct barectf_default_ctx *sctx,
	uint64_t p_locationID,
	uint32_t p_receiver,
	uint32_t p_communicator,
	uint32_t p_msgTag,
	uint64_t p_msgLength,
	uint64_t p_requestID);

/* Trace (data stream type `default`, event record type `Event_MpiIsendComplete`) */
void barectf_default_trace_Event_MpiIsendComplete(struct barectf_default_ctx *sctx,
	uint64_t p_locationID,
	uint64_t p_requestID);

/* Trace (data stream type `default`, event record type `Event_MpiRecv`) */
void barectf_default_trace_Event_MpiRecv(struct barectf_default_ctx *sctx,
	uint64_t p_locationID,
	uint32_t p_sender,
	uint32_t p_communicator,
	uint32_t p_msgTag,
	uint64_t p_msgLength);

/* Trace (data stream type `default`, event record type `Event_MpiRequestCancelled`) */
void barectf_default_trace_Event_MpiRequestCancelled(struct barectf_default_ctx *sctx,
	uint64_t p_locationID,
	uint64_t p_requestID);

/* Trace (data stream type `default`, event record type `Event_MpiRequestTest`) */
void barectf_default_trace_Event_MpiRequestTest(struct barectf_default_ctx *sctx,
	uint64_t p_locationID,
	uint64_t p_requestID);

/* Trace (data stream type `default`, event record type `Event_MpiSend`) */
void barectf_default_trace_Event_MpiSend(struct barectf_default_ctx *sctx,
	uint64_t p_locationID,
	uint32_t p_receiver,
	uint32_t p_communicator,
	uint32_t p_msgTag,
	uint64_t p_msgLength);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_Attribute`) */
void barectf_default_trace_GlobalDefAttribute_Attribute(struct barectf_default_ctx *sctx,
	uint32_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_CallingContext`) */
void barectf_default_trace_GlobalDefAttribute_CallingContext(struct barectf_default_ctx *sctx,
	uint32_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_Comm`) */
void barectf_default_trace_GlobalDefAttribute_Comm(struct barectf_default_ctx *sctx,
	uint32_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_Double`) */
void barectf_default_trace_GlobalDefAttribute_Double(struct barectf_default_ctx *sctx,
	double p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_Float`) */
void barectf_default_trace_GlobalDefAttribute_Float(struct barectf_default_ctx *sctx,
	float p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_Group`) */
void barectf_default_trace_GlobalDefAttribute_Group(struct barectf_default_ctx *sctx,
	uint32_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_Int16`) */
void barectf_default_trace_GlobalDefAttribute_Int16(struct barectf_default_ctx *sctx,
	int16_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_Int32`) */
void barectf_default_trace_GlobalDefAttribute_Int32(struct barectf_default_ctx *sctx,
	int32_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_Int64`) */
void barectf_default_trace_GlobalDefAttribute_Int64(struct barectf_default_ctx *sctx,
	int64_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_Int8`) */
void barectf_default_trace_GlobalDefAttribute_Int8(struct barectf_default_ctx *sctx,
	int8_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_InterruptGenerator`) */
void barectf_default_trace_GlobalDefAttribute_InterruptGenerator(struct barectf_default_ctx *sctx,
	uint32_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_IoFile`) */
void barectf_default_trace_GlobalDefAttribute_IoFile(struct barectf_default_ctx *sctx,
	uint32_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_IoHandle`) */
void barectf_default_trace_GlobalDefAttribute_IoHandle(struct barectf_default_ctx *sctx,
	uint32_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_Location`) */
void barectf_default_trace_GlobalDefAttribute_Location(struct barectf_default_ctx *sctx,
	uint64_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_Metric`) */
void barectf_default_trace_GlobalDefAttribute_Metric(struct barectf_default_ctx *sctx,
	uint32_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_Parameter`) */
void barectf_default_trace_GlobalDefAttribute_Parameter(struct barectf_default_ctx *sctx,
	uint32_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_Region`) */
void barectf_default_trace_GlobalDefAttribute_Region(struct barectf_default_ctx *sctx,
	uint32_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_RmaWin`) */
void barectf_default_trace_GlobalDefAttribute_RmaWin(struct barectf_default_ctx *sctx,
	uint32_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_SourceCodeLocation`) */
void barectf_default_trace_GlobalDefAttribute_SourceCodeLocation(struct barectf_default_ctx *sctx,
	uint32_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_String`) */
void barectf_default_trace_GlobalDefAttribute_String(struct barectf_default_ctx *sctx,
	uint32_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_UInt16`) */
void barectf_default_trace_GlobalDefAttribute_UInt16(struct barectf_default_ctx *sctx,
	uint16_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_UInt32`) */
void barectf_default_trace_GlobalDefAttribute_UInt32(struct barectf_default_ctx *sctx,
	uint32_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_UInt64`) */
void barectf_default_trace_GlobalDefAttribute_UInt64(struct barectf_default_ctx *sctx,
	uint64_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDefAttribute_UInt8`) */
void barectf_default_trace_GlobalDefAttribute_UInt8(struct barectf_default_ctx *sctx,
	uint8_t p_value);

/* Trace (data stream type `default`, event record type `GlobalDef_Attribute`) */
void barectf_default_trace_GlobalDef_Attribute(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_name,
	uint32_t p_description,
	uint8_t p_type);

/* Trace (data stream type `default`, event record type `GlobalDef_CallingContext`) */
void barectf_default_trace_GlobalDef_CallingContext(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_region,
	uint32_t p_sourceCodeLocation,
	uint32_t p_parent);

/* Trace (data stream type `default`, event record type `GlobalDef_CallingContextProperty`) */
void barectf_default_trace_GlobalDef_CallingContextProperty(struct barectf_default_ctx *sctx,
	uint32_t p_callingContext,
	uint32_t p_name);

/* Trace (data stream type `default`, event record type `GlobalDef_Callpath`) */
void barectf_default_trace_GlobalDef_Callpath(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_parent,
	uint32_t p_region);

/* Trace (data stream type `default`, event record type `GlobalDef_CallpathParameter`) */
void barectf_default_trace_GlobalDef_CallpathParameter(struct barectf_default_ctx *sctx,
	uint32_t p_callpath,
	uint32_t p_parameter);

/* Trace (data stream type `default`, event record type `GlobalDef_Callsite`) */
void barectf_default_trace_GlobalDef_Callsite(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_sourceFile,
	uint32_t p_lineNumber,
	uint32_t p_enteredRegion,
	uint32_t p_leftRegion);

/* Trace (data stream type `default`, event record type `GlobalDef_CartCoordinate`) */
void barectf_default_trace_GlobalDef_CartCoordinate(struct barectf_default_ctx *sctx,
	uint32_t p_cartTopology,
	uint32_t p_rank,
	uint32_t p___coordinates_len,
	const uint32_t *p_coordinates);

/* Trace (data stream type `default`, event record type `GlobalDef_CartDimension`) */
void barectf_default_trace_GlobalDef_CartDimension(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_name,
	uint32_t p_size,
	uint8_t p_cartPeriodicity);

/* Trace (data stream type `default`, event record type `GlobalDef_CartTopology`) */
void barectf_default_trace_GlobalDef_CartTopology(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_name,
	uint32_t p_communicator,
	uint32_t p___cartDimensions_len,
	const uint32_t *p_cartDimensions);

/* Trace (data stream type `default`, event record type `GlobalDef_ClockProperties`) */
void barectf_default_trace_GlobalDef_ClockProperties(struct barectf_default_ctx *sctx,
	uint64_t p_timerResolution,
	uint64_t p_globalOffset,
	uint64_t p_traceLength);

/* Trace (data stream type `default`, event record type `GlobalDef_Comm`) */
void barectf_default_trace_GlobalDef_Comm(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_name,
	uint32_t p_group,
	uint32_t p_parent);

/* Trace (data stream type `default`, event record type `GlobalDef_Group`) */
void barectf_default_trace_GlobalDef_Group(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_name,
	uint8_t p_groupType,
	uint8_t p_paradigm,
	uint32_t p_groupFlags,
	uint32_t p_numberOfMembers);

/* Trace (data stream type `default`, event record type `GlobalDef_GroupMember`) */
void barectf_default_trace_GlobalDef_GroupMember(struct barectf_default_ctx *sctx,
	uint32_t p_group,
	uint32_t p_rank,
	uint64_t p_location);

/* Trace (data stream type `default`, event record type `GlobalDef_InterruptGenerator`) */
void barectf_default_trace_GlobalDef_InterruptGenerator(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_name,
	uint8_t p_interruptGeneratorMode,
	uint8_t p_base,
	int64_t p_exponent,
	uint64_t p_period);

/* Trace (data stream type `default`, event record type `GlobalDef_IoDirectory`) */
void barectf_default_trace_GlobalDef_IoDirectory(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_name,
	uint32_t p_scope);

/* Trace (data stream type `default`, event record type `GlobalDef_IoFileProperty`) */
void barectf_default_trace_GlobalDef_IoFileProperty(struct barectf_default_ctx *sctx,
	uint32_t p_ioFile,
	uint32_t p_name);

/* Trace (data stream type `default`, event record type `GlobalDef_IoHandle`) */
void barectf_default_trace_GlobalDef_IoHandle(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_name,
	uint32_t p_file,
	uint8_t p_ioParadigm,
	uint32_t p_ioHandleFlags,
	uint32_t p_comm,
	uint32_t p_parent);

/* Trace (data stream type `default`, event record type `GlobalDef_IoParadigm`) */
void barectf_default_trace_GlobalDef_IoParadigm(struct barectf_default_ctx *sctx,
	uint8_t p_self,
	uint32_t p_identification,
	uint32_t p_name,
	uint8_t p_ioParadigmClass,
	uint32_t p_ioParadigmFlags,
	uint8_t p_numberOfProperties);

/* Trace (data stream type `default`, event record type `GlobalDef_IoParadigmProperty`) */
void barectf_default_trace_GlobalDef_IoParadigmProperty(struct barectf_default_ctx *sctx,
	uint8_t p_ioParadigm,
	uint8_t p_ioParadigmProperty);

/* Trace (data stream type `default`, event record type `GlobalDef_IoPreCreatedHandleState`) */
void barectf_default_trace_GlobalDef_IoPreCreatedHandleState(struct barectf_default_ctx *sctx,
	uint32_t p_ioHandle,
	uint8_t p_mode,
	uint32_t p_statusFlags);

/* Trace (data stream type `default`, event record type `GlobalDef_IoRegularFile`) */
void barectf_default_trace_GlobalDef_IoRegularFile(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_name,
	uint32_t p_scope);

/* Trace (data stream type `default`, event record type `GlobalDef_Location`) */
void barectf_default_trace_GlobalDef_Location(struct barectf_default_ctx *sctx,
	uint64_t p_self,
	uint32_t p_name,
	uint8_t p_locationType,
	uint64_t p_numberOfEvents,
	uint32_t p_locationGroup);

/* Trace (data stream type `default`, event record type `GlobalDef_LocationGroup`) */
void barectf_default_trace_GlobalDef_LocationGroup(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_name,
	uint8_t p_locationGroupType,
	uint32_t p_systemTreeParent);

/* Trace (data stream type `default`, event record type `GlobalDef_LocationGroupProperty`) */
void barectf_default_trace_GlobalDef_LocationGroupProperty(struct barectf_default_ctx *sctx,
	uint32_t p_locationGroup,
	uint32_t p_name);

/* Trace (data stream type `default`, event record type `GlobalDef_LocationProperty`) */
void barectf_default_trace_GlobalDef_LocationProperty(struct barectf_default_ctx *sctx,
	uint64_t p_location,
	uint32_t p_name);

/* Trace (data stream type `default`, event record type `GlobalDef_MetricClass`) */
void barectf_default_trace_GlobalDef_MetricClass(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p___metricMembers_len,
	const uint32_t *p_metricMembers,
	uint8_t p_metricOccurrence,
	uint8_t p_recorderKind);

/* Trace (data stream type `default`, event record type `GlobalDef_MetricClassRecorder`) */
void barectf_default_trace_GlobalDef_MetricClassRecorder(struct barectf_default_ctx *sctx,
	uint32_t p_metric,
	uint64_t p_recorder);

/* Trace (data stream type `default`, event record type `GlobalDef_MetricInstance`) */
void barectf_default_trace_GlobalDef_MetricInstance(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_metricClass,
	uint64_t p_recorder,
	uint8_t p_metricScope,
	uint64_t p_scope);

/* Trace (data stream type `default`, event record type `GlobalDef_MetricMember`) */
void barectf_default_trace_GlobalDef_MetricMember(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_name,
	uint32_t p_description,
	uint8_t p_metricType,
	uint8_t p_metricMode,
	uint8_t p_valueType,
	uint8_t p_base,
	int64_t p_exponent,
	uint32_t p_unit);

/* Trace (data stream type `default`, event record type `GlobalDef_Paradigm`) */
void barectf_default_trace_GlobalDef_Paradigm(struct barectf_default_ctx *sctx,
	uint8_t p_paradigm,
	uint32_t p_name,
	uint8_t p_paradigmClass);

/* Trace (data stream type `default`, event record type `GlobalDef_ParadigmProperty`) */
void barectf_default_trace_GlobalDef_ParadigmProperty(struct barectf_default_ctx *sctx,
	uint8_t p_paradigm,
	uint8_t p_property);

/* Trace (data stream type `default`, event record type `GlobalDef_Parameter`) */
void barectf_default_trace_GlobalDef_Parameter(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_name,
	uint8_t p_parameterType);

/* Trace (data stream type `default`, event record type `GlobalDef_Region`) */
void barectf_default_trace_GlobalDef_Region(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_name,
	uint32_t p_canonicalName,
	uint32_t p_description,
	uint8_t p_regionRole,
	uint8_t p_paradigm,
	uint32_t p_regionFlag,
	uint32_t p_sourceFile,
	uint32_t p_beginLineNumber,
	uint32_t p_endLineNumber);

/* Trace (data stream type `default`, event record type `GlobalDef_RmaWin`) */
void barectf_default_trace_GlobalDef_RmaWin(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_name,
	uint32_t p_comm);

/* Trace (data stream type `default`, event record type `GlobalDef_SourceCodeLocation`) */
void barectf_default_trace_GlobalDef_SourceCodeLocation(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_file,
	uint32_t p_lineNumber);

/* Trace (data stream type `default`, event record type `GlobalDef_String`) */
void barectf_default_trace_GlobalDef_String(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	const char *p_stringValue);

/* Trace (data stream type `default`, event record type `GlobalDef_SystemTreeNode`) */
void barectf_default_trace_GlobalDef_SystemTreeNode(struct barectf_default_ctx *sctx,
	uint32_t p_self,
	uint32_t p_name,
	uint32_t p_className,
	uint32_t p_systemTreeParent);

/* Trace (data stream type `default`, event record type `GlobalDef_SystemTreeNodeDomain`) */
void barectf_default_trace_GlobalDef_SystemTreeNodeDomain(struct barectf_default_ctx *sctx,
	uint32_t p_systemTreeNode,
	uint8_t p_systemTreeDomain);

/* Trace (data stream type `default`, event record type `GlobalDef_SystemTreeNodeProperty`) */
void barectf_default_trace_GlobalDef_SystemTreeNodeProperty(struct barectf_default_ctx *sctx,
	uint32_t p_systemTreeNode,
	uint32_t p_name);

#ifdef __cplusplus
}
#endif

#endif /* _BARECTF_H */
